#!/usr/bin/env php
<?php
/*
 * This file is part of PHPUnit.
 *
 * (c) Sebastian Bergmann <sebastian@phpunit.de>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

if (version_compare('7.1.0', PHP_VERSION, '>')) {
    fwrite(
        STDERR,
        sprintf(
            'This version of PHPUnit is supported on PHP 7.1, PHP 7.2, and PHP 7.3.' . PHP_EOL .
            'You are using PHP %s (%s).' . PHP_EOL,
            PHP_VERSION,
            PHP_BINARY
        )
    );

    die(1);
}

if (!ini_get('date.timezone')) {
    ini_set('date.timezone', 'UTC');
}

// find soft-mocks init path
$softMocksInitPath = '';
foreach (array(__DIR__ . '/../../badoo/soft-mocks/src/init_with_composer.php', __DIR__ . '/../../../src/init_with_composer.php') as $file) {
    if (file_exists($file)) {
        $softMocksInitPath = $file;
    }
}
unset($file);

if ($softMocksInitPath) {
    $composerInstall = require $softMocksInitPath;
    require $composerInstall;
    // inject soft-mocks into phpunit
    class_exists(PHPUnit\Util\FileLoader::class);
    \Badoo\SoftMocks::injectIntoPhpunit();
    define('PHPUNIT_COMPOSER_INSTALL', $composerInstall);
    unset($composerInstall);
} else {
    foreach (array(__DIR__ . '/../../autoload.php', __DIR__ . '/../vendor/autoload.php', __DIR__ . '/vendor/autoload.php') as $file) {
        if (file_exists($file)) {
            define('PHPUNIT_COMPOSER_INSTALL', $file);
            break;
        }
    }
    unset($file);
    if (!defined('PHPUNIT_COMPOSER_INSTALL')) {
        fwrite(STDERR,
            'You need to set up the project dependencies using Composer:' . PHP_EOL . PHP_EOL .
            '    composer install' . PHP_EOL . PHP_EOL .
            'You can learn all about Composer on https://getcomposer.org/.' . PHP_EOL
        );
        die(1);
    }
    require PHPUNIT_COMPOSER_INSTALL;
}

$options = getopt('', array('prepend:'));

if (isset($options['prepend'])) {
    if ($softMocksInitPath) {
        require \Badoo\SoftMocks::rewrite($options['prepend']);
    } else {
        require $options['prepend'];
    }
}

unset($options);
unset($softMocksInitPath);

PHPUnit\TextUI\Command::main();
